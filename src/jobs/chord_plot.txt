!STD
    def chord_plot(self, chord, name, ext = 5, radius = 0.3):
        n_ext = max(self.n_span, ext)
        fr = 1 if np.max(chord) <= n_ext else np.min(chord[chord > 0])
        fig, ax = plt.subplots(figsize = (4, 4))

        # fret grid
        for i in range(self.n_strings):
            plt.plot([i, i], [0, -n_ext], 'black')
        for i in range(n_ext + 1):
            plt.plot([0, self.n_strings - 1], [-i, -i], 'black',
                     linewidth = 5 if i == 0 and fr == 1 else None)

        # finger positions
        for i, c in enumerate(np.flip(chord)):
            x = i
            y = fr - c - 0.5 if c > 0 else 0.5
            if c == -1:
                self.plot_cross(i, radius)
                plt.text(x - 0.2, -5.5,
                         self.index_to_aspn(np.flip(self.open_strings)[i]),
                         color = 'gray')
            else:
                ax.add_patch(plt.Circle((x, y), radius, color = 'black', fill = c != 0))
                plt.text(x - 0.2, -5.5, s
                         self.index_to_aspn(c + np.flip(self.open_strings)[i]))
        # starting fret
        if fr != 1:
            plt.text(-0.3 * len(str(fr)) - 0.4, -0.68, f'{fr}', fontsize = 'xx-large')

        ax.axis('off')
        ax.axis('equal')
        plt.title(name.replace('M', ''))
        plt.show()
